"// Running help command"
List of classes of commands:

aliases -- User-defined aliases of other commands.
breakpoints -- Making program stop at certain points.
data -- Examining data.
files -- Specifying and examining files.
internals -- Maintenance commands.
obscure -- Obscure features.
running -- Running the program.
stack -- Examining the stack.
status -- Status inquiries.
support -- Support facilities.
text-user-interface -- TUI is the GDB text based interface.
tracepoints -- Tracing of program execution without stopping the program.
user-defined -- User-defined commands.

Type "help" followed by a class name for a list of commands in that class.
Type "help all" for the list of all commands.
Type "help" followed by command name for full documentation.
Type "apropos word" to search for commands related to "word".
Type "apropos -v word" for full documentation of commands related to "word".
Command name abbreviations are allowed if unambiguous.

"// running file command"
Reading symbols from q5...
"// running list command"
15			}
16			arr[j + 1] = key;
17		}
18	}
19	
20	void printArray(int arr[], int n)
21	{
22		int i;
23		for (i = 0; i < n; i++)
24			cout << arr[i] << " ";
28	int main()
29	{   
30	    int N;
31	    cin>>N;
32	    int arr[N];
33	    for(int i = 0; i<N; i++){
34	        cin>>arr[i];
35	    }
36	
37		insertionSort(arr, N);
38		printArray(arr, N);
39	
40		return 0;
41	}
"// adding breakpoint at line 34"
Breakpoint 1 at 0x137f: file q5.cpp, line 34.
"// using run, step, next, finish to navigate the program"
"// using run, step, next, finish to navigate the program"Starting program: /home/sbdaule/Documents/IIT Bhilai/Sem IV/CS200 STT II/Assignment/Assignment 4/Assignment/q5/my/q5 

This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.archlinux.org>
Debuginfod has been disabled.
To make this setting permanent, add 'set debuginfod enabled off' to .gdbinit.
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main () at q5.cpp:34
34	        cin>>arr[i];
33	    for(int i = 0; i<N; i++){

Breakpoint 1, main () at q5.cpp:34
34	        cin>>arr[i];
33	    for(int i = 0; i<N; i++){

Breakpoint 1, main () at q5.cpp:34
34	        cin>>arr[i];
33	    for(int i = 0; i<N; i++){

Breakpoint 1, main () at q5.cpp:34
34	        cin>>arr[i];
33	    for(int i = 0; i<N; i++){

Breakpoint 1, main () at q5.cpp:34
34	        cin>>arr[i];
Undefined command: "2".  Try "help".
33	    for(int i = 0; i<N; i++){
37		insertionSort(arr, N);
28	int main()
29	{   
30	    int N;
31	    cin>>N;
32	    int arr[N];
33	    for(int i = 0; i<N; i++){
34	        cin>>arr[i];
35	    }
36	
37		insertionSort(arr, N);
38		printArray(arr, N);
39	
40		return 0;
41	}
insertionSort (arr=0x7fffffffe1f0, n=5) at q5.cpp:7
7		for (i = 1; i < n; i++)
2	using namespace std;
3	
4	void insertionSort(int arr[], int n)
5	{
6		int i, key, j;
7		for (i = 1; i < n; i++)
8		{
9			key = arr[i];
10			j = i - 1;
11			while (j >= 0 && arr[j] > key)
1	#include <bits/stdc++.h>
2	using namespace std;
3	
4	void insertionSort(int arr[], int n)
5	{
6		int i, key, j;
7		for (i = 1; i < n; i++)
8		{
9			key = arr[i];
10			j = i - 1;
4	void insertionSort(int arr[], int n)
5	{
6		int i, key, j;
7		for (i = 1; i < n; i++)
8		{
9			key = arr[i];
10			j = i - 1;
11			while (j >= 0 && arr[j] > key)
12			{
13				arr[j + 1] = arr[j];
14				j = j - 1;
15			}
16			arr[j + 1] = key;
17		}
18	}
9			key = arr[i];
10			j = i - 1;
11			while (j >= 0 && arr[j] > key)
16			arr[j + 1] = key;
Run till exit from #0  insertionSort (arr=0x7fffffffe1f0, n=5) at q5.cpp:16
main () at q5.cpp:38
38		printArray(arr, N);
"// Using continue to finish program execution"
Continuing.
[Inferior 1 (process 82632) exited normally]
Starting program: /home/sbdaule/Documents/IIT Bhilai/Sem IV/CS200 STT II/Assignment/Assignment 4/Assignment/q5/my/q5 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 1, main () at q5.cpp:34
34	        cin>>arr[i];
"// Using delete to remove breakpoint"
"// Using print to get value of N"
$1 = 6
"// Using until to move to a point after all inputs have been received"
main () at q5.cpp:37
37		insertionSort(arr, N);
"// Using printf and while to print array"
The 1 th value of arry is 3
The 2 th value of arry is 6
The 3 th value of arry is 7
The 4 th value of arry is 8
The 5 th value of arry is 3
32	    int arr[N];
33	    for(int i = 0; i<N; i++){
34	        cin>>arr[i];
35	    }
36	
37		insertionSort(arr, N);
38		printArray(arr, N);
39	
40		return 0;
41	}
insertionSort (arr=0x7fffffffe1f0, n=6) at q5.cpp:7
7		for (i = 1; i < n; i++)
2	using namespace std;
3	
4	void insertionSort(int arr[], int n)
5	{
6		int i, key, j;
7		for (i = 1; i < n; i++)
8		{
9			key = arr[i];
10			j = i - 1;
11			while (j >= 0 && arr[j] > key)
2	using namespace std;
3	
4	void insertionSort(int arr[], int n)
5	{
6		int i, key, j;
7		for (i = 1; i < n; i++)
8		{
9			key = arr[i];
10			j = i - 1;
11			while (j >= 0 && arr[j] > key)
12			{
13				arr[j + 1] = arr[j];
14				j = j - 1;
15			}
16			arr[j + 1] = key;
17		}
18	}
19	
20	void printArray(int arr[], int n)
Breakpoint 2 at 0x5555555551d4: file q5.cpp, line 13.
Continuing.

Breakpoint 2, insertionSort (arr=0x7fffffffe1f0, n=6) at q5.cpp:13
13				arr[j + 1] = arr[j];
8		{
9			key = arr[i];
10			j = i - 1;
11			while (j >= 0 && arr[j] > key)
12			{
13				arr[j + 1] = arr[j];
14				j = j - 1;
15			}
16			arr[j + 1] = key;
17		}

i = 1
key = 3
j = 0
#0  insertionSort (arr=0x7fffffffe1f0, n=6) at q5.cpp:13
#1  0x00005555555553c2 in main () at q5.cpp:37
"// using backtrace and info locals"
Num     Type           Disp Enb Address            What
2       breakpoint     keep y   0x00005555555551d4 in insertionSort(int*, int) at q5.cpp:13
	breakpoint already hit 1 time
18	}
19	
20	void printArray(int arr[], int n)
21	{
22		int i;
23		for (i = 0; i < n; i++)
24			cout << arr[i] << " ";
25		cout << endl;
26	}
27	
28	int main()
29	{   
30	    int N;
31	    cin>>N;
32	    int arr[N];
33	    for(int i = 0; i<N; i++){
34	        cin>>arr[i];
35	    }
36	
37		insertionSort(arr, N);
Breakpoint 3 at 0x55555555526a: file q5.cpp, line 23.
Continuing.

Breakpoint 2, insertionSort (arr=0x7fffffffe1f0, n=6) at q5.cpp:13
13				arr[j + 1] = arr[j];
Continuing.

Breakpoint 2, insertionSort (arr=0x7fffffffe1f0, n=6) at q5.cpp:13
13				arr[j + 1] = arr[j];
Continuing.

Breakpoint 2, insertionSort (arr=0x7fffffffe1f0, n=6) at q5.cpp:13
13				arr[j + 1] = arr[j];
$3 = 2
8		{
9			key = arr[i];
10			j = i - 1;
11			while (j >= 0 && arr[j] > key)
12			{
13				arr[j + 1] = arr[j];
14				j = j - 1;
15			}
16			arr[j + 1] = key;
17		}
Num     Type           Disp Enb Address            What
2       breakpoint     keep y   0x00005555555551d4 in insertionSort(int*, int) at q5.cpp:13
	breakpoint already hit 4 times
3       breakpoint     keep y   0x000055555555526a in printArray(int*, int) at q5.cpp:23
"// as we keep hitting this breakpoint, disabling it"
Num     Type           Disp Enb Address            What
2       breakpoint     keep n   0x00005555555551d4 in insertionSort(int*, int) at q5.cpp:13
	breakpoint already hit 4 times
3       breakpoint     keep y   0x000055555555526a in printArray(int*, int) at q5.cpp:23
Continuing.

Breakpoint 3, printArray (arr=0x7fffffffe1f0, n=6) at q5.cpp:23
23		for (i = 0; i < n; i++)
18	}
19	
20	void printArray(int arr[], int n)
21	{
22		int i;
23		for (i = 0; i < n; i++)
24			cout << arr[i] << " ";
25		cout << endl;
26	}
27	
Continuing.
[Inferior 1 (process 87408) exited normally]
Num     Type           Disp Enb Address            What
2       breakpoint     keep n   0x00005555555551d4 in insertionSort(int*, int) at q5.cpp:13
	breakpoint already hit 4 times
3       breakpoint     keep y   0x000055555555526a in printArray(int*, int) at q5.cpp:23
	breakpoint already hit 1 time
"// Reenabling the breakpoint"
Num     Type           Disp Enb Address            What
2       breakpoint     keep y   0x00005555555551d4 in insertionSort(int*, int) at q5.cpp:13
	breakpoint already hit 4 times
3       breakpoint     keep y   0x000055555555526a in printArray(int*, int) at q5.cpp:23
	breakpoint already hit 1 time
// Using clear to clear all breakpointsDeleted breakpoint 3 
Num     Type           Disp Enb Address            What
2       breakpoint     keep y   0x00005555555551d4 in insertionSort(int*, int) at q5.cpp:13
	breakpoint already hit 4 times
No breakpoint at this line.
Starting program: /home/sbdaule/Documents/IIT Bhilai/Sem IV/CS200 STT II/Assignment/Assignment 4/Assignment/q5/my/q5 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".
[Inferior 1 (process 88490) exited normally]
Num     Type           Disp Enb Address            What
2       breakpoint     keep y   0x00005555555551d4 in insertionSort(int*, int) at q5.cpp:13
Breakpoint 4 at 0x5555555553b1: file q5.cpp, line 37.
Starting program: /home/sbdaule/Documents/IIT Bhilai/Sem IV/CS200 STT II/Assignment/Assignment 4/Assignment/q5/my/q5 
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/usr/lib/libthread_db.so.1".

Breakpoint 4, main () at q5.cpp:37
37		insertionSort(arr, N);
// Using whatis
type = int
type = int [5]

// While making this log file, echo has been used to add all the comments
// Finally finish program execution and quit using quit command
Continuing.

Breakpoint 2, insertionSort (arr=0x7fffffffe1f0, n=5) at q5.cpp:13
13				arr[j + 1] = arr[j];
Deleted breakpoint 2 
Continuing.
[Inferior 1 (process 88498) exited normally]
